I"	<h2 id="spring框架详解">Spring框架详解</h2>
<ul>
  <li>
    <h4 id="210">2.1.0</h4>
    <p>Spring中对象无需自己创建或查找与其所关联的对象，而由容器负责把需要相互协作的对象引用赋予各个对象。
装配：创建对象之间协作关系的行为，它是依赖注入的本质。</p>
  </li>
  <li>
    <h4 id="211">2.1.1</h4>
    <p>装配方式（三种）：自动装配 &gt; java Config 方式（java中显示配置） &gt; xml中显示配置</p>
  </li>
  <li>
    <h4 id="212">2.1.2</h4>
    <p>自动化配置bean（两方面）：</p>
    <ul>
      <li>组件扫描：Spring会自动发现应用上下文中创建的bean。</li>
      <li>自动装配：Spring自动满足bean之间的依赖。
组件扫描和自动装配组合在一起就会将显示配置降到最低。</li>
    </ul>
  </li>
</ul>

<p>组件扫描：@ComponentScan 默认扫描与配置类（@Configuration）相同的包
xml方式：<context:component-scan>元素
@Component:为这个类创建bean
@AutoWired：将bean注入
@AutoWired可用@Inject替换</context:component-scan></p>

<p>@Component(“xxx”) = @Component + @Named(“xxx”)
@Component注解默认为我们的bean设置一个名字为类名首字母小写</p>

<p>@ComponentScan 的basePackages属性可以指定扫描的包或类</p>

<p>@AutoWired：用在方法（setXxx或普通方法）或者构造器上均可以，没有匹配的依赖则抛异常，通过required属性设置为false可避免异常。但有可能出现NullPointerException</p>

<ul>
  <li>
    <h4 id="230">2.3.0</h4>
    <p>在你想要将第三方库中的组件装配到你自己的应用中的时候，是没有办法添加@Component和@AutoWired注解的，此时只能使用Java Config配置。</p>
  </li>
  <li>
    <h4 id="233">2.3.3</h4>
    <p>@Bean java Config 方式，将bean</p>
  </li>
  <li>
    <h4 id="250">2.5.0</h4>
  </li>
  <li>@Import：可以使用@Configuration标记多个配置类，或者使用@Import，在有@Configuration注解的类中导入其他配置类。</li>
  <li>@ImportResource：导入.xml配置文件</li>
  <li>在xml配置文件中引入其他xml配置文件
    <import resource="xxx-xx.xml" />
  </li>
  <li>在xml配置文件中引入java config类
    <bean class="xxx.CDConfigCD" />
  </li>
</ul>

:ET